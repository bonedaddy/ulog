.TH "/media/solidity/DATA/Code/bonedaddy/ulog/include/colors.h" 3 "Tue Aug 11 2020" "ulogger" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/media/solidity/DATA/Code/bonedaddy/ulog/include/colors.h \- macros and utilities for printing color to stdout from https://www.quora.com/How-do-I-print-a-colored-output-in-C Pass a \fCCOLORS_x\fP enum value into \fCprint_colored\fP and the color will be printed on stdout Note that if you want to disable printing of that color you'll have to send the \fCCOLORS_RESET\fP enum value through to make non-bold change 0->1 (0;31m red) vs (1;31m bold red)  

.SH SYNOPSIS
.br
.PP
\fC#include <stdbool\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCOLORS_VERSION\fP   '0\&.0\&.2\-rc1'"
.br
.ti -1c
.RI "#define \fBANSI_COLOR_RED\fP   '\\x1b[1;31m'"
.br
.ti -1c
.RI "#define \fBANSI_COLOR_SOFT_RED\fP   '\\x1b[1;38;5;210m'"
.br
.ti -1c
.RI "#define \fBANSI_COLOR_GREEN\fP   '\\x1b[1;32m'"
.br
.ti -1c
.RI "#define \fBANSI_COLOR_YELLOW\fP   '\\x1b[1;33m'"
.br
.ti -1c
.RI "#define \fBANSI_COLOR_BLUE\fP   '\\x1b[1;34m'"
.br
.ti -1c
.RI "#define \fBANSI_COLOR_MAGENTA\fP   '\\x1b[1;35m'"
.br
.ti -1c
.RI "#define \fBANSI_COLOR_CYAN\fP   '\\x1b[1;36m'"
.br
.ti -1c
.RI "#define \fBANSI_COLOR_RESET\fP   '\\x1b[1;0m'"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBCOLORS\fP { \fBCOLORS_RED\fP, \fBCOLORS_SOFT_RED\fP, \fBCOLORS_GREEN\fP, \fBCOLORS_YELLOW\fP, \fBCOLORS_BLUE\fP, \fBCOLORS_MAGENTA\fP, \fBCOLORS_CYAN\fP, \fBCOLORS_RESET\fP }"
.br
.RI "allows short-handed references to ANSI color schemes, and enables easier color selection anytime you want to extend the available colors with an additional enum, add a switch case in get_ansi_color_scheme "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "char * \fBformat_colored\fP (\fBCOLORS\fP color, char *message)"
.br
.RI "prefixes a message with the given ANSI color code "
.ti -1c
.RI "char * \fBget_ansi_color_scheme\fP (\fBCOLORS\fP color)"
.br
.RI "returns an ansi color string to be used with printf "
.ti -1c
.RI "void \fBprint_colored\fP (\fBCOLORS\fP color, char *message)"
.br
.RI "prints message to stdout with the given color "
.ti -1c
.RI "int \fBwrite_colored\fP (\fBCOLORS\fP color, int file_descriptor, char *message)"
.br
.RI "is like print_colored except it writes the data into the given file descriptor "
.in -1c
.SH "Detailed Description"
.PP 
macros and utilities for printing color to stdout from https://www.quora.com/How-do-I-print-a-colored-output-in-C Pass a \fCCOLORS_x\fP enum value into \fCprint_colored\fP and the color will be printed on stdout Note that if you want to disable printing of that color you'll have to send the \fCCOLORS_RESET\fP enum value through to make non-bold change 0->1 (0;31m red) vs (1;31m bold red) 


.PP
Definition in file \fBcolors\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define ANSI_COLOR_BLUE   '\\x1b[1;34m'"

.PP
Definition at line 32 of file colors\&.h\&.
.SS "#define ANSI_COLOR_CYAN   '\\x1b[1;36m'"

.PP
Definition at line 34 of file colors\&.h\&.
.SS "#define ANSI_COLOR_GREEN   '\\x1b[1;32m'"

.PP
Definition at line 30 of file colors\&.h\&.
.SS "#define ANSI_COLOR_MAGENTA   '\\x1b[1;35m'"

.PP
Definition at line 33 of file colors\&.h\&.
.SS "#define ANSI_COLOR_RED   '\\x1b[1;31m'"

.PP
Definition at line 28 of file colors\&.h\&.
.SS "#define ANSI_COLOR_RESET   '\\x1b[1;0m'"

.PP
Definition at line 35 of file colors\&.h\&.
.SS "#define ANSI_COLOR_SOFT_RED   '\\x1b[1;38;5;210m'"

.PP
Definition at line 29 of file colors\&.h\&.
.SS "#define ANSI_COLOR_YELLOW   '\\x1b[1;33m'"

.PP
Definition at line 31 of file colors\&.h\&.
.SS "#define COLORS_VERSION   '0\&.0\&.2\-rc1'"

.PP
Definition at line 26 of file colors\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBCOLORS\fP"

.PP
allows short-handed references to ANSI color schemes, and enables easier color selection anytime you want to extend the available colors with an additional enum, add a switch case in get_ansi_color_scheme 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICOLORS_RED \fP\fP
.TP
\fB\fICOLORS_SOFT_RED \fP\fP
.TP
\fB\fICOLORS_GREEN \fP\fP
.TP
\fB\fICOLORS_YELLOW \fP\fP
.TP
\fB\fICOLORS_BLUE \fP\fP
.TP
\fB\fICOLORS_MAGENTA \fP\fP
.TP
\fB\fICOLORS_CYAN \fP\fP
.TP
\fB\fICOLORS_RESET \fP\fP
.PP
Definition at line 41 of file colors\&.h\&.
.SH "Function Documentation"
.PP 
.SS "char* format_colored (\fBCOLORS\fP color, char * message)"

.PP
prefixes a message with the given ANSI color code 
.PP
\fBReturns\fP
.RS 4
Success: char pointer containing the message prefixed with the ANSI color code 
.PP
Failure: NULL pointer 
.RE
.PP
\fBNote\fP
.RS 4
you must free up the allocate memory for the returned vlaue 
.RE
.PP

.PP
Definition at line 52 of file colors\&.c\&.
.SS "char* get_ansi_color_scheme (\fBCOLORS\fP color)"

.PP
returns an ansi color string to be used with printf 
.PP
Definition at line 22 of file colors\&.c\&.
.SS "void print_colored (\fBCOLORS\fP color, char * message)"

.PP
prints message to stdout with the given color 
.PP
Definition at line 73 of file colors\&.c\&.
.SS "int write_colored (\fBCOLORS\fP color, int file_descriptor, char * message)"

.PP
is like print_colored except it writes the data into the given file descriptor 
.PP
\fBReturns\fP
.RS 4
Success: 0 
.PP
Failure: 1 
.RE
.PP

.PP
Definition at line 82 of file colors\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ulogger from the source code\&.
